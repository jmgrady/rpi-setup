---
##############################################################
# Playbook: playbook.yml
#
# Sets up services to run on a Raspberry Pi:
#  - Monitor a pushbutton to initiate a poweroff sequence
#  - Display the WiFi IP address on a 16x2 display
#  - Log/display temperature readings
#
##############################################################

- name: Setup Raspberry Pi services
  hosts: all
  gather_facts: true
  become: true

  vars_files:
    - vars/config_common.yml
  vars:
    python_env_wrapper: python-wrapper
    virtual_env: venv
    temp_meas_period: 15.0
    temp_data_dir: "{{ install_dir }}/data"
    temp_exec: temp_logger.py
    test_exec: ui/test_ui.py
    test_ui: no

  tasks:
    - name: "Create required installation directories"
      file:
        path: "{{ item.path }}"
        state: directory
        owner: root
        group: root
        mode: "{{ item.mode }}"
      loop:
        - path: "{{ install_dir }}"
          mode: "0755"
        - path: "{{ install_dir }}/ui"
          mode: "0755"
        - path: "{{ install_dir }}/data"
          mode: "0777"

    - name: "Install Python Scripts"
      copy:
        src: "{{ item }}"
        dest: "{{ install_dir }}/{{ item | basename }}"
        owner: root
        group: root
        mode: 0755
      with_fileglob:
        - "app/*"

    - name: "Install UI Python Scripts"
      copy:
        src: "{{ item }}"
        dest: "{{ install_dir }}/ui/{{ item | basename }}"
        owner: root
        group: root
        mode: 0755
      with_fileglob:
        - "app/ui/*.py"

    - name: "Install application icons"
      copy:
        src: app/ui/icons/thermometer-svgrepo-com.svg
        dest: /usr/share/icons/thermometer.svg
        owner: root
        group: root
        mode: 0755

    - name: "Install rpi service wrapper"
      template:
        src: python_env_wrapper.sh
        dest: /usr/local/bin/{{ python_env_wrapper }}
        mode: 0755
        owner: root
        group: root

    - name: "Create monitor shutdown service file"
      template:
        src: rpi_monitor.service.j2
        dest: /usr/lib/systemd/system/{{ item.name }}.service
        owner: root
        group: root
        mode: 0755
      loop:
        - {
            name: monitor-shutdown,
            description: Monitor pushbutton to initiate a graceful power-off,
            script: "{{ install_dir }}/monitorshutdown.py",
          }

    - name: "Create optional service files"
      template:
        src: rpi_monitor.service.j2
        dest: /usr/lib/systemd/system/{{ item.name }}.service
        owner: root
        group: root
        mode: 0755
      loop:
        - {
            name: display-ip-addr,
            description: Display IP address,
            script: "{{ install_dir }}/monitorip.py",
          }
        - {
            name: temperature-logger,
            description: Log temperature measurements to a local file,
            script: "{{ install_dir }}/templogger.py --period {{ temp_meas_period }}",
          }
      when: run_as_service

    - name: "Create desktop file"
      template:
        src: rpi_desktop.j2
        dest: /usr/share/applications/Temperature.desktop
        owner: root
        group: root
        mode: 0755
      when: not run_as_service

    - name: "Setup GPIO Shutdown overlay"
      blockinfile:
        block: |
          [all]
          # Enable GPIO shutdown
          dtoverlay=gpio-shutdown,active_low,gpiopin={{ gpio_shutdown.pin }}
        append_newline: yes
        insertafter: EOF
        path: /boot/firmware/config.txt
      when: gpio_shutdown.enabled

    - name: "Setup Python virtual environment"
      import_role:
        name: python_venv
